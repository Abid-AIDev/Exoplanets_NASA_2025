{
  "training_summary": {
    "best_model": "Ensemble",
    "best_f1_score": 0.8651942563381677,
    "training_samples": 4080,
    "features_used": [
      "depth_ppm",
      "distance_ratio",
      "duration_hours",
      "equilibrium_temp_k",
      "fp_flag_co",
      "fp_flag_ec",
      "fp_flag_nt",
      "fp_flag_ss",
      "impact_parameter",
      "inclination_deg",
      "insolation_flux",
      "period_days",
      "planet_mass_earth",
      "planet_mass_jupiter",
      "planet_radius_jupiter",
      "planet_radius_rearth",
      "radius_ratio",
      "score",
      "semi_major_axis_au",
      "stellar_age_gyr",
      "stellar_density",
      "stellar_distance_pc",
      "stellar_logg",
      "stellar_luminosity",
      "stellar_mass_msun",
      "stellar_metallicity",
      "stellar_radius_rsun",
      "stellar_teff_k",
      "transit_epoch",
      "transit_ingress_hours",
      "duty_cycle",
      "transit_frequency",
      "planet_radius_from_depth",
      "mission_encoded",
      "stellar_radius_solar",
      "stellar_mass_solar",
      "transit_depth_mag",
      "habitable_zone_inner",
      "habitable_zone_outer",
      "in_habitable_zone",
      "transit_snr",
      "has_radius_measurement",
      "has_mass_measurement",
      "has_stellar_parameters",
      "stellar_radius_mass_ratio",
      "planet_stellar_radius_ratio",
      "transit_duty_cycle",
      "stellar_activity_index",
      "habitable_zone_distance",
      "orbital_velocity"
    ],
    "n_features": 50,
    "timestamp": "2025-10-04T14:11:32.890811"
  },
  "model_performance": {
    "XGBoost": {
      "model": "XGBClassifier(base_score=None, booster=None, callbacks=None,\n              colsample_bylevel=None, colsample_bynode=None,\n              colsample_bytree=0.8, device=None, early_stopping_rounds=None,\n              enable_categorical=False, eval_metric=None, feature_types=None,\n              feature_weights=None, gamma=None, grow_policy=None,\n              importance_type=None, interaction_constraints=None,\n              learning_rate=0.1, max_bin=None, max_cat_threshold=None,\n              max_cat_to_onehot=None, max_delta_step=None, max_depth=6,\n              max_leaves=None, min_child_weight=None, missing=nan,\n              monotone_constraints=None, multi_strategy=None, n_estimators=500,\n              n_jobs=8, num_parallel_tree=None, ...)",
      "accuracy": 0.8382352941176471,
      "precision": 0.8385406846769197,
      "recall": 0.8382352941176471,
      "f1": 0.8383826118632749,
      "cv_mean": 0.8505080342490061,
      "cv_std": 0.013027877706168426,
      "predictions": "[0 1 0 0 0 0 0 2 1 1 1 1 0 2 0 2 1 1 1 1 1 2 0 2 2 2 0 0 1 2 2 1 0 2 2 2 1\n 1 2 0 2 1 1 1 1 0 1 2 2 1 1 0 0 2 1 1 2 1 2 1 1 2 0 0 2 0 1 2 1 1 1 1 1 2\n 2 2 0 2 1 2 0 1 0 2 0 0 0 0 1 0 0 2 0 2 2 2 0 0 2 0 0 0 2 0 2 2 2 2 0 2 0\n 0 0 1 1 2 1 2 2 2 0 2 1 1 1 0 2 2 0 2 1 1 1 2 1 1 1 1 2 1 1 1 0 2 1 0 1 1\n 2 2 2 0 0 0 0 1 0 1 0 2 2 1 1 1 1 2 0 1 2 2 0 1 1 0 0 1 0 1 1 1 1 1 0 1 1\n 0 2 1 2 2 2 2 1 2 0 2 0 0 0 1 0 0 2 1 1 2 1 0 0 0 0 0 0 1 1 2 2 1 0 0 1 0\n 1 0 2 0 2 2 2 1 2 2 2 0 2 0 1 1 1 2 1 2 0 2 2 0 2 1 2 2 0 2 1 0 2 2 0 0 2\n 2 2 2 2 0 1 2 2 2 1 0 1 1 2 2 2 1 0 0 0 0 0 0 1 0 2 0 0 1 0 0 2 0 0 0 2 0\n 0 1 2 2 1 0 2 0 1 1 1 2 0 2 2 0 2 0 1 1 0 1 1 1 2 1 2 0 1 1 1 0 2 2 1 1 2\n 1 2 1 1 1 2 0 0 1 0 1 2 1 2 2 1 2 1 0 2 1 0 1 2 2 2 2 0 1 0 0 1 2 2 0 0 2\n 0 1 1 0 1 1 0 1 1 0 1 2 0 2 1 0 0 1 2 0 0 1 1 0 0 0 0 2 1 2 1 1 2 2 1 1 2\n 2 2 2 2 2 1 0 2 0 2 1 0 0 2 1 2 2 0 2 2 1 2 0 2 2 2 2 0 0 2 0 1 2 1 2 0 2\n 2 2 0 1 1 1 1 1 2 2 2 0 1 0 0 1 0 1 1 1 0 1 2 0 0 1 0 2 2 0 2 2 1 2 2 2 1\n 0 1 1 0 1 0 2 1 2 1 0 1 1 2 2 1 2 1 0 0 2 0 1 0 0 1 2 1 1 2 2 1 2 0 0 1 2\n 0 2 2 0 1 0 0 2 0 2 2 1 0 2 0 0 2 0 2 2 1 2 2 1 1 2 0 1 2 0 0 1 2 0 0 0 2\n 1 0 0 0 2 0 1 2 1 0 2 1 0 2 0 0 0 2 0 1 2 2 0 2 1 0 0 2 0 2 0 1 0 2 0 0 0\n 2 2 1 1 2 0 2 2 1 2 0 2 2 0 1 2 2 1 0 1 1 2 0 0 0 0 0 0 1 2 2 1 1 1 0 2 2\n 0 1 2 0 2 1 1 2 2 2 0 0 2 1 2 2 2 1 1 1 2 1 0 2 0 2 1 0 2 0 0 0 1 1 2 2 0\n 0 1 2 0 1 0 1 0 1 0 2 2 2 2 1 1 1 0 1 0 1 1 1 2 1 0 0 2 1 0 1 0 2 2 2 1 1\n 1 0 0 0 1 0 2 1 0 1 0 1 2 1 1 2 1 2 0 1 2 0 2 2 1 0 1 2 2 0 1 1 2 2 0 2 1\n 1 1 0 1 0 2 1 2 1 0 1 1 2 2 0 1 0 1 1 1 0 2 2 0 2 2 1 2 1 1 0 2 0 0 0 1 0\n 0 0 0 0 1 0 1 2 1 1 0 0 2 0 0 0 1 1 1 0 0 0 2 1 1 2 0 0 0 0 1 2 1 1 0 1 1\n 0 2]",
      "probabilities": "[[9.98397291e-01 1.11058878e-03 4.92069637e-04]\n [3.76515294e-04 9.99506712e-01 1.16727184e-04]\n [9.96648014e-01 7.08529376e-04 2.64342059e-03]\n ...\n [3.11388839e-02 9.68834162e-01 2.69221055e-05]\n [5.76961637e-01 3.79297242e-04 4.22659069e-01]\n [1.32135600e-01 4.65901656e-04 8.67398441e-01]]"
    },
    "LightGBM": {
      "model": "LGBMClassifier(class_weight='balanced', colsample_bytree=0.8, max_depth=6,\n               n_estimators=500, n_jobs=8, random_state=42, reg_alpha=0.1,\n               reg_lambda=1.0, subsample=0.8)",
      "accuracy": 0.8492647058823529,
      "precision": 0.8492869212571814,
      "recall": 0.8492647058823529,
      "f1": 0.8492601215840393,
      "cv_mean": 0.8475168734669308,
      "cv_std": 0.012853742055663867,
      "predictions": "[0 1 0 2 2 0 0 2 1 1 1 1 0 2 0 2 1 1 1 1 1 2 0 2 2 2 0 0 1 0 2 1 0 2 2 2 1\n 1 2 0 2 1 1 1 1 0 1 0 2 1 1 0 0 2 1 1 2 1 2 1 1 2 0 0 2 0 1 2 1 1 1 1 1 2\n 2 2 0 0 1 2 0 1 0 2 0 0 0 0 1 2 0 2 0 2 2 2 0 0 2 0 0 0 2 2 2 2 2 2 0 2 0\n 0 0 1 1 2 1 2 2 1 0 2 1 1 1 0 2 2 0 2 1 1 1 2 1 1 1 1 2 1 1 1 0 2 1 0 1 1\n 2 2 2 0 0 0 0 1 0 1 0 2 2 1 1 1 1 2 0 1 2 2 0 1 1 0 0 1 0 1 1 1 1 1 0 1 1\n 0 2 1 2 2 2 2 1 2 0 2 0 0 0 1 0 0 2 1 1 2 1 0 2 0 0 0 0 1 1 2 2 1 0 0 1 0\n 1 0 2 0 2 2 2 1 2 2 2 0 2 0 1 1 1 2 1 2 0 2 2 0 2 1 2 2 0 2 1 0 2 2 0 0 2\n 2 2 2 2 0 1 2 2 2 1 0 1 1 2 2 2 1 0 0 0 2 0 0 1 0 2 0 0 1 0 0 2 0 0 0 2 0\n 0 1 2 2 1 0 2 0 1 1 1 0 0 2 2 0 2 0 1 1 0 1 1 1 2 1 2 2 1 1 1 0 2 0 1 1 2\n 1 2 1 1 1 2 0 0 1 0 1 2 1 2 2 1 2 1 0 2 1 0 1 2 2 2 2 0 1 0 0 1 2 2 0 0 2\n 0 1 1 0 1 1 0 1 1 0 1 2 0 2 1 0 0 1 2 0 0 1 1 0 0 0 0 2 1 2 1 1 2 2 1 1 2\n 2 2 2 2 2 1 0 2 0 2 1 0 0 2 1 2 2 0 2 2 1 2 0 2 2 2 2 0 0 2 0 1 2 1 2 0 2\n 2 2 0 1 1 1 1 1 2 2 2 0 1 2 0 1 0 1 1 1 0 1 2 0 0 1 0 2 2 0 2 2 1 2 2 2 1\n 0 1 1 0 1 0 2 1 2 1 0 1 1 2 2 1 0 1 0 0 2 0 1 0 0 1 2 1 1 2 2 1 2 0 0 1 2\n 0 2 0 0 1 2 0 2 2 2 2 1 0 2 0 0 2 0 2 2 1 2 2 1 1 2 0 1 2 0 0 1 2 0 0 0 2\n 1 0 0 0 2 0 1 2 1 0 2 1 0 2 0 0 0 2 0 1 2 2 0 2 1 0 0 2 0 2 0 1 0 0 0 0 0\n 2 2 1 1 2 2 2 2 1 2 0 2 2 0 1 0 2 1 0 1 1 0 0 0 0 0 0 0 1 2 2 1 1 1 0 2 2\n 0 1 2 0 2 1 1 2 2 2 0 0 2 1 2 2 2 1 1 1 2 1 0 2 0 2 1 0 2 0 0 0 1 1 2 2 0\n 0 1 2 0 1 0 1 0 1 0 2 2 2 2 1 1 1 0 1 0 1 1 1 2 1 0 0 2 1 0 1 0 2 2 2 1 1\n 1 0 0 0 1 0 2 1 0 1 0 1 2 1 1 2 1 2 0 1 2 0 0 2 1 0 1 2 2 0 1 1 2 2 0 2 1\n 1 1 2 1 0 2 1 2 1 0 1 1 2 2 0 1 0 1 1 1 0 2 2 0 2 2 1 2 1 1 0 2 0 2 0 1 0\n 0 0 0 0 1 0 1 2 1 1 0 0 2 0 0 0 1 1 1 0 0 0 2 1 1 2 0 0 0 0 1 2 1 1 0 1 1\n 0 2]",
      "probabilities": "[[9.99620724e-01 2.57765316e-04 1.21510884e-04]\n [1.47698172e-04 9.99820189e-01 3.21124014e-05]\n [9.97071794e-01 9.30519051e-04 1.99768662e-03]\n ...\n [1.08959500e-02 9.89101493e-01 2.55699474e-06]\n [7.76587474e-01 3.74893712e-05 2.23375037e-01]\n [5.22446459e-02 2.60838772e-04 9.47494515e-01]]"
    },
    "RandomForest": {
      "model": "RandomForestClassifier(class_weight='balanced', max_depth=12,\n                       min_samples_leaf=2, min_samples_split=5,\n                       n_estimators=300, n_jobs=8, random_state=42)",
      "accuracy": 0.8566176470588235,
      "precision": 0.8553061179503422,
      "recall": 0.8566176470588235,
      "f1": 0.8558773734992279,
      "cv_mean": 0.8384981260834806,
      "cv_std": 0.013106379985770567,
      "predictions": "[0 1 0 2 0 0 0 2 1 1 1 1 0 2 0 0 1 1 1 1 1 2 0 2 2 2 0 1 1 0 2 1 1 0 2 2 1\n 1 2 0 2 1 1 1 1 0 1 2 0 1 1 0 1 2 1 1 2 1 2 1 1 2 0 0 2 0 1 2 1 1 1 1 1 2\n 2 2 0 0 1 2 0 1 0 2 0 0 0 0 1 2 0 2 0 2 2 2 1 0 2 0 0 0 2 2 2 2 2 2 0 2 0\n 0 0 1 1 2 1 2 2 1 0 2 1 1 1 1 0 2 2 2 1 1 1 2 1 1 1 1 2 1 1 1 0 2 1 0 1 1\n 2 2 2 0 0 0 2 1 0 1 0 2 0 1 1 1 1 2 0 1 2 0 0 1 1 0 0 1 0 1 1 1 1 1 0 1 1\n 0 2 1 2 2 2 2 1 2 2 2 0 0 0 1 0 0 2 1 1 0 1 0 0 0 0 0 0 1 1 2 2 1 0 0 1 0\n 1 0 2 2 2 2 2 1 2 2 2 0 2 0 1 1 1 2 1 2 0 2 2 0 0 1 2 2 0 2 1 0 2 2 0 0 2\n 2 2 2 2 0 1 2 2 2 1 0 1 1 2 0 2 1 0 0 0 2 0 2 1 0 2 0 0 1 0 0 2 0 0 0 2 0\n 0 1 2 2 1 0 2 0 1 1 1 0 0 2 2 2 2 0 1 1 0 1 1 1 2 1 2 2 1 1 1 1 0 2 1 1 2\n 1 2 1 1 1 2 0 0 1 0 1 2 1 2 2 1 2 1 0 2 1 0 1 2 2 2 2 0 1 0 0 1 2 2 0 0 2\n 0 1 1 0 1 1 0 1 1 0 1 2 0 2 1 0 0 1 2 0 0 1 1 0 0 0 0 2 1 2 1 1 2 0 1 1 2\n 2 2 2 2 2 1 0 0 2 2 1 0 0 2 1 2 2 0 2 2 1 2 0 2 2 2 0 0 2 2 0 1 2 1 2 0 2\n 2 2 0 1 1 1 1 1 2 2 2 0 1 2 0 1 0 1 1 1 0 1 2 0 0 1 2 2 2 2 2 2 1 2 2 2 1\n 0 1 1 0 1 0 2 1 2 1 0 1 1 2 2 1 0 1 0 0 2 0 1 0 0 1 2 1 1 2 2 1 2 2 0 1 2\n 0 2 2 0 1 0 0 0 2 2 2 1 2 2 1 0 2 0 2 2 1 2 2 1 1 2 0 1 2 0 0 1 2 0 2 0 2\n 1 0 0 0 2 0 1 2 1 0 0 1 0 2 2 0 0 2 0 1 2 2 0 2 1 2 0 0 0 2 0 1 0 0 2 0 0\n 0 2 1 1 2 0 2 2 1 2 0 2 2 0 1 0 0 1 0 1 1 2 0 0 0 0 0 0 1 2 2 0 1 1 0 2 2\n 0 1 2 0 2 1 1 2 2 2 2 0 0 1 2 2 2 1 1 1 2 1 0 2 0 2 1 0 2 0 0 0 1 1 0 2 0\n 0 1 2 0 1 0 1 0 1 0 2 2 0 2 1 1 1 0 1 0 1 1 1 2 1 0 0 2 1 0 1 0 2 2 2 1 1\n 1 0 0 0 1 0 2 1 2 1 0 1 2 1 1 2 1 2 0 1 2 0 2 2 1 0 1 2 2 0 1 1 2 2 0 2 1\n 1 1 2 1 0 2 1 2 1 0 1 1 2 2 0 1 0 1 1 1 0 2 2 0 2 2 1 2 1 1 0 2 0 2 0 1 0\n 0 0 0 0 1 0 1 2 1 1 0 0 2 0 0 0 1 1 1 0 0 0 2 1 1 2 0 0 0 0 1 2 1 1 0 1 1\n 0 2]",
      "probabilities": "[[0.69099812 0.1512069  0.15779498]\n [0.03564582 0.94185418 0.0225    ]\n [0.72949592 0.11931879 0.15118529]\n ...\n [0.38787545 0.60630324 0.00582131]\n [0.60205977 0.01001218 0.38792805]\n [0.22882011 0.01522139 0.7559585 ]]"
    },
    "ExtraTrees": {
      "model": "ExtraTreesClassifier(class_weight='balanced', max_depth=12, min_samples_leaf=2,\n                     min_samples_split=5, n_estimators=300, n_jobs=8,\n                     random_state=42)",
      "accuracy": 0.8443627450980392,
      "precision": 0.84803020961252,
      "recall": 0.8443627450980392,
      "f1": 0.8429467752100294,
      "cv_mean": 0.8311141361895512,
      "cv_std": 0.01268613351754067,
      "predictions": "[0 1 0 2 0 0 0 2 1 1 1 1 0 2 0 2 1 1 1 1 1 2 0 2 2 2 2 1 1 2 2 1 1 2 2 2 1\n 1 2 0 2 1 1 1 1 0 1 2 0 1 1 0 0 2 1 1 2 1 2 1 1 2 0 2 2 0 1 2 1 1 1 1 1 2\n 2 2 0 0 1 2 0 1 2 2 0 2 0 0 1 2 0 2 0 2 2 2 0 0 2 2 0 0 2 2 2 0 2 2 0 2 0\n 0 0 1 1 2 1 2 2 1 0 2 1 1 1 0 0 2 2 2 1 1 1 2 1 1 1 1 2 1 1 1 0 2 1 0 1 1\n 2 2 2 0 0 0 2 1 0 1 0 2 0 1 1 1 1 2 0 1 2 0 0 1 1 2 2 1 0 1 1 1 1 1 0 1 1\n 2 2 1 2 2 2 2 1 2 2 2 2 0 0 1 2 2 2 1 1 2 1 0 2 0 0 2 0 1 1 1 2 1 0 0 1 2\n 1 0 2 2 2 2 2 1 2 2 2 0 2 0 1 1 1 2 1 2 0 2 2 0 2 1 2 2 0 2 1 0 2 2 0 2 2\n 2 2 2 2 0 1 2 2 2 1 0 1 1 2 0 2 1 0 0 0 2 0 2 1 0 2 0 0 1 0 0 2 2 2 0 2 0\n 0 1 2 2 1 0 2 0 1 1 1 0 0 2 2 2 2 0 1 1 0 1 1 1 2 1 2 0 1 1 1 0 0 2 1 1 2\n 1 2 1 1 1 2 0 2 1 0 1 2 1 2 2 1 2 1 0 2 1 0 1 2 2 2 2 2 1 0 0 1 2 2 0 0 2\n 0 1 1 0 1 1 0 1 1 0 1 2 0 2 1 0 0 1 2 0 0 1 1 2 0 0 2 0 1 2 1 1 2 0 1 1 2\n 2 2 2 2 2 1 0 0 2 2 1 0 0 2 1 2 2 0 2 2 1 2 0 2 2 2 0 0 0 2 0 1 2 1 2 0 2\n 2 2 0 1 1 1 1 1 2 2 2 0 1 0 2 1 0 1 1 1 2 1 2 0 2 1 2 2 2 2 2 2 1 2 2 2 1\n 0 1 1 0 1 0 2 1 2 1 0 1 1 2 2 1 2 1 0 0 2 0 1 0 0 1 2 1 1 2 2 1 2 2 2 1 2\n 0 2 2 0 1 0 0 2 2 2 2 1 0 2 0 0 2 0 2 2 1 2 2 1 1 2 0 1 2 0 0 1 2 2 2 0 2\n 1 0 0 0 2 0 1 2 1 2 0 1 0 2 2 0 0 2 0 1 2 2 2 2 1 2 0 2 0 2 0 1 0 2 0 0 0\n 2 2 1 1 2 0 2 0 1 2 0 2 2 0 1 2 0 1 0 1 1 2 0 2 0 0 2 0 1 2 2 1 1 1 0 2 2\n 0 1 2 0 2 1 1 2 2 2 2 0 0 1 2 2 2 1 1 1 2 1 0 2 0 2 1 2 2 0 0 0 1 1 0 2 0\n 2 1 2 0 1 0 1 0 1 0 2 2 0 2 1 1 1 0 1 0 1 1 1 2 1 0 0 2 1 2 1 0 2 2 2 1 1\n 1 2 2 0 1 2 2 1 2 1 0 1 2 1 1 2 1 2 0 1 2 0 2 2 1 0 1 2 2 0 1 1 2 2 0 2 1\n 1 1 2 1 0 2 1 2 1 0 1 1 2 2 0 1 0 1 1 1 0 2 2 0 2 2 1 2 1 1 0 2 0 2 0 1 0\n 0 0 0 0 1 0 1 2 1 1 0 0 2 0 0 0 1 1 1 0 0 0 2 1 1 2 2 2 0 0 1 2 1 1 0 1 1\n 0 2]",
      "probabilities": "[[0.67538601 0.12928191 0.19533208]\n [0.04540645 0.93024094 0.02435261]\n [0.6931478  0.07121546 0.23563673]\n ...\n [0.27569326 0.71193087 0.01237587]\n [0.57876096 0.01086159 0.41037745]\n [0.32472703 0.01413755 0.66113543]]"
    },
    "GradientBoosting": {
      "model": "GradientBoostingClassifier(max_depth=6, n_estimators=300, random_state=42,\n                           subsample=0.8)",
      "accuracy": 0.8517156862745098,
      "precision": 0.8519900162505274,
      "recall": 0.8517156862745098,
      "f1": 0.8518473546097857,
      "cv_mean": 0.8438275802720236,
      "cv_std": 0.014438064857945854,
      "predictions": "[0 1 0 2 0 0 0 2 1 1 1 1 0 2 0 2 1 1 1 1 1 2 0 2 2 2 0 0 1 0 2 1 0 2 2 2 1\n 1 2 0 2 1 1 1 1 0 1 2 0 1 1 0 0 2 1 1 2 1 2 1 1 2 0 0 2 0 1 2 1 1 1 1 1 2\n 2 2 0 0 1 2 0 1 0 2 0 0 0 0 1 2 0 2 0 2 2 2 0 0 2 0 0 0 2 0 2 2 2 2 0 2 0\n 0 0 1 1 2 1 2 2 1 0 2 1 1 1 0 2 2 2 2 1 1 1 2 1 1 1 1 2 1 1 1 0 2 1 0 1 1\n 2 2 2 0 0 0 0 1 0 1 0 2 2 1 1 1 1 2 0 1 2 0 0 1 1 0 0 1 0 1 1 1 1 1 0 1 1\n 0 2 1 2 2 0 2 1 2 0 2 0 0 0 1 0 0 2 1 1 2 1 0 0 2 0 0 0 1 1 2 2 1 0 0 1 0\n 1 0 2 0 2 2 2 1 2 2 2 0 2 0 1 1 1 2 1 2 0 2 2 0 2 1 2 2 0 2 1 0 2 2 0 0 2\n 2 2 2 2 0 1 2 2 2 1 0 1 1 2 0 2 1 0 0 0 2 0 2 1 0 2 0 0 1 0 0 2 0 0 0 2 0\n 0 1 2 2 1 0 2 0 1 1 1 0 0 2 2 0 2 0 1 1 0 1 1 1 2 1 2 0 1 1 1 0 2 2 1 1 2\n 1 2 2 1 1 2 0 0 1 0 1 2 1 2 2 1 2 1 0 2 1 0 1 0 2 2 2 0 1 0 0 1 2 2 0 0 2\n 0 1 1 0 1 1 0 1 1 0 1 2 0 2 1 0 0 1 0 0 0 1 1 0 0 0 2 2 1 2 1 1 2 2 1 1 2\n 2 2 2 2 2 1 0 0 0 2 1 0 0 2 1 2 2 0 2 2 1 2 0 2 2 2 2 0 0 2 0 1 2 1 2 0 2\n 2 2 0 1 1 1 1 1 2 2 2 0 1 0 0 1 0 1 1 1 0 1 2 0 0 1 0 2 2 2 2 2 1 2 2 2 1\n 0 1 1 0 1 0 2 1 2 1 0 1 1 2 2 1 2 1 0 0 2 0 1 0 0 1 2 1 1 2 2 1 2 0 0 1 2\n 0 2 2 0 1 0 0 2 2 2 2 1 2 2 0 0 2 0 2 2 1 2 2 1 1 2 0 1 0 0 0 1 2 0 0 0 2\n 1 0 0 0 2 0 1 2 1 0 2 1 0 2 2 0 0 2 0 1 2 2 0 2 1 0 0 2 0 2 0 1 0 2 2 0 0\n 0 2 1 1 2 0 2 2 1 2 0 2 2 0 1 2 2 1 0 1 1 2 0 0 0 0 0 0 1 2 2 1 1 1 0 2 2\n 0 1 2 0 2 1 1 2 2 2 0 0 0 1 2 2 2 1 1 1 2 1 0 2 0 2 1 0 2 0 0 0 1 1 0 2 0\n 0 1 0 0 1 0 1 0 1 0 2 2 2 2 1 1 1 0 1 0 1 1 1 2 1 0 0 2 1 0 1 0 2 2 2 1 1\n 1 0 0 0 1 0 2 1 0 1 0 1 2 1 1 2 1 2 0 1 2 0 2 2 1 0 1 2 2 0 1 1 2 2 0 2 1\n 1 1 2 1 0 2 1 2 1 0 1 1 2 2 0 1 0 1 1 1 0 0 2 0 2 2 1 2 1 1 0 2 0 0 0 1 0\n 0 0 0 0 1 0 1 2 1 1 0 0 2 0 0 0 1 1 1 0 0 0 2 1 1 2 0 0 0 0 1 2 1 1 0 1 1\n 0 2]",
      "probabilities": "[[9.98852881e-01 1.84146902e-08 1.14710098e-03]\n [9.80512672e-09 9.99999989e-01 7.19458024e-10]\n [9.98305687e-01 1.35790256e-08 1.69429893e-03]\n ...\n [3.34871498e-07 9.99999665e-01 1.90901492e-10]\n [9.14497657e-01 1.85223836e-08 8.55023244e-02]\n [3.13343418e-02 1.07901963e-08 9.68665647e-01]]"
    },
    "LogisticRegression": {
      "model": "LogisticRegression(class_weight='balanced', max_iter=1000, n_jobs=8,\n                   random_state=42)",
      "accuracy": 0.8223039215686274,
      "precision": 0.8303277770407768,
      "recall": 0.8223039215686274,
      "f1": 0.8203379412150218,
      "cv_mean": 0.8008534209974719,
      "cv_std": 0.007021368400360575,
      "predictions": "[0 1 0 0 0 0 0 2 1 1 1 1 2 2 2 0 1 1 1 1 1 2 0 2 2 2 0 0 1 2 2 1 0 2 2 2 1\n 1 2 0 2 1 1 1 1 2 1 2 0 1 1 0 0 2 1 1 2 1 2 1 1 2 0 2 2 0 1 2 1 1 1 1 1 2\n 2 2 0 2 1 2 0 1 2 2 0 2 0 0 1 2 0 2 0 2 2 2 0 0 2 0 0 0 2 0 2 0 2 2 2 2 0\n 0 0 1 1 2 1 2 2 1 0 2 1 1 1 0 0 2 2 2 1 1 1 2 1 1 1 1 2 1 1 1 0 2 1 0 1 1\n 2 2 2 0 0 0 0 1 2 1 2 0 2 1 1 1 1 0 2 1 2 0 0 1 1 0 0 1 2 1 1 1 1 1 2 1 1\n 2 2 1 2 2 2 2 1 2 2 2 2 0 0 1 2 0 2 1 1 2 1 2 0 0 0 0 0 1 1 1 2 1 0 0 1 2\n 1 2 2 2 2 2 2 1 2 2 2 2 2 0 1 1 1 2 1 2 0 2 2 0 0 1 2 2 0 2 1 0 2 2 0 0 2\n 2 2 2 2 2 1 2 2 2 1 2 1 1 2 2 2 1 0 0 0 2 0 2 1 0 2 0 0 1 0 0 2 2 0 2 2 0\n 0 1 2 2 1 0 2 2 1 1 1 2 0 2 2 2 2 2 1 1 2 1 1 1 2 1 2 0 1 1 1 0 2 2 1 1 2\n 1 2 2 1 1 2 0 2 1 0 1 2 1 2 2 1 2 1 0 2 1 2 1 2 2 2 2 2 1 0 0 1 2 2 0 0 2\n 0 1 1 2 1 1 0 1 1 2 1 2 2 2 1 2 0 1 2 2 0 1 1 0 0 0 2 0 1 0 1 1 2 0 1 1 2\n 2 2 2 2 2 1 0 2 2 2 1 0 2 2 1 2 2 0 0 2 1 2 2 2 2 2 2 2 0 2 0 1 2 1 2 0 2\n 2 2 0 1 1 1 1 1 2 2 2 0 1 0 2 1 0 1 1 1 2 1 0 0 2 1 0 2 2 0 2 2 1 2 2 2 1\n 0 1 1 0 1 0 0 1 2 1 0 1 1 2 2 1 2 1 0 0 2 0 1 0 0 1 2 1 1 2 2 1 2 2 2 1 2\n 0 2 2 0 1 0 0 0 2 2 2 1 0 2 0 0 2 0 2 2 1 2 2 1 1 2 0 1 2 0 0 1 2 2 0 0 2\n 1 0 0 2 2 0 1 2 1 2 0 1 2 2 2 0 0 2 2 1 0 2 2 2 1 2 0 2 2 2 0 1 0 2 2 2 0\n 2 2 1 1 2 2 2 0 1 2 0 2 2 0 1 2 2 1 2 1 1 2 0 0 0 0 2 2 1 2 2 1 1 1 0 2 0\n 0 1 2 0 2 1 1 2 2 2 2 0 0 1 2 2 2 1 1 1 2 1 0 2 0 2 1 2 2 2 2 0 1 1 2 2 0\n 0 1 0 0 1 0 1 0 1 0 2 0 0 2 1 1 1 0 1 0 1 1 1 2 1 2 2 2 1 0 1 0 2 2 2 1 1\n 1 0 0 0 1 2 2 1 2 1 0 1 2 1 1 2 1 2 0 1 2 2 2 2 1 0 1 2 2 0 1 1 2 2 0 2 1\n 1 1 2 1 0 2 1 2 1 2 1 1 2 2 0 1 0 1 1 1 0 2 0 0 2 2 1 2 1 1 0 2 0 2 0 1 2\n 2 0 0 0 1 0 1 2 1 1 0 0 2 2 0 0 1 1 1 0 2 0 0 1 1 2 0 0 0 0 1 2 1 1 0 1 1\n 0 2]",
      "probabilities": "[[9.15592749e-01 2.52537056e-02 5.91535451e-02]\n [1.08788740e-02 9.89036523e-01 8.46027579e-05]\n [9.87848818e-01 1.11870608e-02 9.64121404e-04]\n ...\n [1.87653577e-03 9.98115177e-01 8.28678498e-06]\n [5.52286997e-01 1.71439767e-03 4.45998605e-01]\n [3.60993490e-01 1.18299645e-04 6.38888210e-01]]"
    },
    "SVM": {
      "model": "SVC(class_weight='balanced', probability=True, random_state=42)",
      "accuracy": 0.7928921568627451,
      "precision": 0.8057261180347525,
      "recall": 0.7928921568627452,
      "f1": 0.7869754488947458,
      "cv_mean": 0.7830662300917232,
      "cv_std": 0.004224093382388107,
      "predictions": "[0 1 0 2 0 0 0 2 1 1 1 1 2 2 2 2 1 1 1 1 1 2 0 2 2 2 0 1 1 2 2 1 0 2 2 2 1\n 1 2 0 2 1 1 1 1 2 1 2 2 1 1 0 0 2 1 1 2 1 2 1 1 2 0 2 2 0 1 2 1 1 1 1 1 2\n 2 2 0 2 1 2 0 1 2 2 0 2 0 0 1 2 0 2 0 2 2 2 0 0 2 2 0 0 2 0 2 2 2 2 0 2 0\n 0 0 1 1 2 1 2 2 1 0 2 1 1 1 0 0 2 2 2 1 1 1 2 1 1 1 1 2 1 1 1 0 2 1 2 1 1\n 2 2 2 0 0 0 0 1 2 1 2 2 2 1 1 1 1 0 0 1 2 0 0 1 1 0 2 1 2 1 1 1 1 1 2 1 1\n 2 2 1 2 2 2 2 1 2 2 2 2 0 0 1 2 0 2 1 1 2 1 2 0 2 0 0 0 1 1 1 2 1 2 2 1 2\n 1 2 2 2 2 2 2 1 2 2 2 2 2 0 1 1 1 2 1 2 0 2 2 0 2 1 2 2 0 2 1 0 2 2 0 2 2\n 2 2 2 2 2 1 2 2 2 1 2 1 1 2 2 2 1 0 0 0 2 0 2 1 0 2 0 2 1 0 0 2 2 0 2 2 0\n 0 1 2 2 1 0 2 2 1 1 1 2 0 2 2 2 2 2 1 1 2 1 1 1 2 1 2 0 1 1 1 0 2 2 1 1 2\n 1 2 1 1 1 2 0 2 1 0 1 2 1 2 2 1 2 1 2 2 1 0 1 2 2 2 2 2 1 0 0 1 2 2 0 0 2\n 0 1 1 2 1 1 0 1 1 2 1 2 2 2 1 0 0 1 2 2 0 1 1 0 0 2 2 0 1 2 1 1 2 0 1 1 2\n 2 2 2 2 2 1 0 2 2 2 1 0 2 2 1 2 2 0 0 2 1 2 2 2 2 2 2 2 0 2 0 1 2 1 2 0 2\n 2 2 0 1 1 1 1 1 2 2 2 0 1 0 2 1 0 1 1 1 2 1 0 0 2 1 2 2 2 0 2 2 1 2 2 2 1\n 0 1 1 0 1 0 0 1 2 1 0 1 1 2 2 1 2 1 0 0 2 0 1 0 0 1 2 1 1 2 2 1 2 2 2 1 2\n 0 2 2 0 1 2 0 2 2 2 2 1 0 2 0 0 2 0 2 2 1 2 2 1 1 2 0 1 2 0 0 1 2 2 2 0 2\n 1 0 0 2 2 0 1 2 1 2 0 1 2 2 2 0 0 2 2 1 2 2 2 2 1 2 1 2 2 2 0 1 0 2 2 2 2\n 2 2 1 1 2 2 2 0 1 2 0 2 2 2 1 2 2 1 2 1 1 2 0 0 0 0 2 2 1 2 2 1 1 1 0 2 0\n 0 1 2 0 1 1 1 2 2 2 2 0 0 1 2 2 2 1 1 1 2 1 0 2 0 2 1 2 2 2 2 0 1 1 2 2 0\n 0 1 0 0 1 0 1 0 1 0 2 0 0 2 1 1 1 0 1 0 1 1 1 2 1 2 2 2 1 2 1 0 2 2 2 1 1\n 1 0 2 0 1 2 2 1 2 1 0 1 2 1 1 2 1 2 0 1 2 2 2 2 1 0 1 2 2 0 1 1 2 2 0 2 1\n 1 1 2 1 0 2 1 2 1 2 1 1 2 2 0 1 0 1 1 1 0 2 0 0 2 2 1 2 1 1 0 2 0 2 0 1 2\n 2 0 0 0 1 2 1 2 1 1 0 0 2 2 0 0 1 1 1 0 2 0 2 1 1 2 0 0 0 2 1 2 1 1 0 1 1\n 2 2]",
      "probabilities": "[[9.66080996e-01 1.04702375e-03 3.28719803e-02]\n [3.24167658e-02 9.55686955e-01 1.18962791e-02]\n [8.94673693e-01 2.17814522e-02 8.35448546e-02]\n ...\n [2.29233400e-01 7.61836049e-01 8.93055143e-03]\n [5.00081897e-01 2.15234265e-04 4.99702869e-01]\n [2.80033508e-01 1.98640222e-04 7.19767852e-01]]"
    },
    "KNN": {
      "model": "KNeighborsClassifier(n_jobs=8, weights='distance')",
      "accuracy": 0.7328431372549019,
      "precision": 0.7374121779859485,
      "recall": 0.732843137254902,
      "f1": 0.7336529727731298,
      "cv_mean": 0.7582609976704522,
      "cv_std": 0.01807469954456381,
      "predictions": "[0 1 0 2 2 0 0 2 1 1 1 1 2 0 0 2 1 1 1 1 1 0 0 2 2 0 0 1 1 2 0 0 0 2 2 2 1\n 1 2 0 2 1 1 1 1 2 2 2 0 1 1 0 0 2 1 1 2 1 0 1 1 2 0 0 2 0 1 0 1 1 1 1 1 0\n 0 2 0 2 1 0 0 1 2 2 2 2 2 2 1 0 0 2 2 2 2 2 2 0 2 2 0 0 2 0 2 2 2 2 0 2 0\n 0 0 1 1 2 2 2 0 2 0 2 1 1 1 0 0 0 0 2 1 1 1 2 1 1 1 1 0 1 1 1 0 2 1 0 1 1\n 2 2 2 0 0 0 2 1 0 1 2 0 2 1 1 1 1 2 2 1 0 0 0 1 1 0 0 1 0 1 1 1 1 1 2 1 1\n 2 0 1 2 2 2 2 1 2 2 2 0 2 0 1 2 2 0 1 1 2 1 2 2 0 0 2 0 1 1 2 0 1 0 2 1 2\n 1 2 2 0 2 2 2 1 2 2 0 2 2 2 1 1 1 0 1 2 0 0 2 2 2 1 2 2 2 2 1 0 0 2 2 2 2\n 2 2 2 2 2 1 2 2 2 1 2 1 1 0 2 2 1 2 0 0 2 0 2 1 0 2 0 0 1 2 2 2 2 0 2 2 2\n 2 1 2 2 1 2 2 0 1 1 1 0 2 2 2 0 2 0 1 1 2 1 1 1 0 1 2 0 1 1 1 0 0 2 1 1 2\n 1 2 2 1 1 2 0 0 1 0 1 2 1 0 2 1 2 1 2 2 1 0 1 2 2 2 2 0 1 0 0 1 0 2 0 2 0\n 2 1 1 0 1 1 0 1 1 2 1 0 2 2 1 0 0 1 2 0 0 1 1 2 0 2 2 0 1 2 1 1 2 0 1 1 2\n 2 2 2 2 2 1 0 2 2 2 1 0 0 2 1 2 0 2 0 2 1 2 2 2 0 2 0 2 0 2 0 1 2 1 2 0 2\n 2 2 0 1 0 1 1 1 2 2 2 0 1 0 2 1 2 1 1 1 0 1 2 2 0 1 2 2 0 2 2 2 1 2 2 2 1\n 0 1 1 0 1 0 0 1 0 1 2 1 1 2 0 1 0 1 0 0 2 0 1 0 0 1 2 0 1 2 2 1 2 2 2 1 2\n 0 2 2 0 1 2 2 2 0 2 2 1 0 2 0 0 2 0 2 2 1 2 2 1 1 0 2 1 0 0 0 1 2 2 2 2 2\n 1 0 0 2 2 0 1 0 1 2 0 1 2 2 0 0 0 2 2 1 2 2 2 2 1 0 1 2 0 2 0 1 0 0 0 0 2\n 2 2 1 1 2 0 0 2 1 0 0 0 2 2 1 2 2 1 0 1 0 0 0 0 0 0 2 2 1 2 0 1 1 1 0 0 0\n 2 1 2 2 1 1 1 2 2 2 2 0 0 1 2 2 2 1 1 1 0 1 0 2 0 2 1 0 2 2 2 0 1 1 2 2 2\n 0 1 0 0 1 2 1 0 1 0 2 0 0 0 1 1 1 0 1 0 1 1 1 2 1 0 2 0 1 0 1 0 2 0 2 1 1\n 1 2 2 0 1 0 0 1 2 1 0 1 2 2 1 2 1 2 0 1 2 2 0 0 1 0 1 2 0 0 1 1 2 2 2 0 1\n 1 1 2 1 0 0 1 2 1 0 1 1 0 2 0 1 0 1 1 1 0 2 0 0 0 2 1 2 1 1 0 2 0 0 2 1 0\n 0 0 0 0 1 2 1 2 1 1 0 0 2 2 0 0 1 1 1 0 0 0 2 0 1 2 0 0 2 2 1 2 1 1 2 1 0\n 2 2]",
      "probabilities": "[[1.         0.         0.        ]\n [0.35247822 0.44222721 0.20529457]\n [1.         0.         0.        ]\n ...\n [0.74830358 0.25169642 0.        ]\n [0.16926245 0.         0.83073755]\n [0.         0.         1.        ]]"
    },
    "NaiveBayes": {
      "model": "GaussianNB()",
      "accuracy": 0.6997549019607843,
      "precision": 0.7238319079912979,
      "recall": 0.6997549019607844,
      "f1": 0.6626972511527195,
      "cv_mean": 0.6999722556541033,
      "cv_std": 0.028506174220096665,
      "predictions": "[0 1 0 2 2 2 0 2 1 1 1 1 2 2 2 2 1 1 1 1 1 2 2 0 2 2 0 1 1 2 2 1 1 0 2 2 1\n 1 2 0 2 1 1 1 1 2 1 2 2 1 1 2 0 2 1 1 2 1 0 1 1 2 2 2 2 2 1 2 1 1 1 1 1 2\n 2 2 2 2 1 2 0 1 2 2 2 2 0 2 1 2 2 2 2 0 2 2 0 0 2 2 0 2 2 2 2 2 2 0 0 2 0\n 2 0 1 1 2 1 2 2 1 0 2 1 1 1 0 2 2 2 2 1 1 1 2 1 1 1 1 2 1 1 1 2 2 1 2 1 1\n 2 2 2 0 2 0 2 1 2 1 2 2 2 1 1 1 1 2 2 1 2 0 2 1 1 2 2 1 2 1 1 1 1 1 2 1 1\n 2 2 1 2 2 2 2 1 2 2 2 2 0 2 1 2 2 2 1 1 2 1 2 2 2 0 2 2 1 1 1 2 1 2 2 1 2\n 1 2 2 2 2 2 2 1 2 2 2 0 2 0 1 1 1 2 1 2 2 2 2 0 2 1 2 2 2 2 1 0 2 2 2 2 2\n 2 0 0 2 2 1 2 2 2 1 2 1 1 2 2 2 1 2 2 2 2 0 2 1 0 2 2 2 1 2 2 2 0 2 2 2 0\n 2 1 2 2 1 0 2 2 1 1 1 2 2 2 2 2 2 2 1 1 2 1 1 1 2 1 2 0 1 1 1 0 2 2 1 1 2\n 1 2 1 1 1 2 2 2 1 2 1 2 1 2 2 1 2 1 2 2 1 2 1 2 2 2 2 2 1 2 2 1 2 2 2 2 2\n 0 1 1 2 1 1 0 1 1 2 1 2 2 2 1 0 0 1 2 0 0 1 1 2 2 2 2 2 1 2 1 1 2 0 1 1 2\n 2 2 2 2 2 1 2 2 2 2 1 2 2 2 1 2 2 2 2 2 1 2 0 2 2 2 2 2 2 2 2 1 2 1 0 0 2\n 2 2 2 1 1 1 1 1 2 2 2 2 1 2 2 1 2 1 1 1 2 1 2 2 2 1 2 2 2 2 2 2 1 2 2 2 1\n 2 1 1 0 1 2 2 1 2 1 2 1 1 2 2 1 2 1 0 0 2 0 1 2 2 1 0 1 1 2 2 1 2 2 2 1 2\n 2 2 2 0 1 2 2 2 2 2 2 1 2 2 0 2 2 0 2 0 1 2 2 1 1 2 0 1 2 0 2 1 2 2 2 2 2\n 1 2 2 0 2 0 1 2 1 2 0 1 2 2 2 2 2 2 0 1 0 2 2 2 1 2 1 2 2 2 0 1 0 2 0 2 0\n 2 2 1 1 2 2 0 2 1 2 0 2 2 2 1 2 0 1 2 1 1 2 0 2 0 0 2 2 1 2 2 1 1 1 2 2 2\n 2 1 2 2 1 1 1 2 2 2 2 2 0 1 2 2 2 1 1 1 2 1 0 2 2 2 1 0 2 2 2 0 1 1 2 2 2\n 2 1 2 2 1 2 1 2 1 0 2 2 0 2 1 1 1 0 1 0 1 1 1 2 1 2 2 2 1 2 1 2 2 2 2 1 1\n 1 2 2 2 1 2 2 1 2 1 2 1 2 1 1 2 1 2 2 1 2 2 2 2 1 2 1 2 2 2 1 1 2 2 2 2 1\n 1 1 2 1 0 2 1 2 1 2 1 1 0 2 2 1 2 1 1 1 2 2 2 0 2 2 1 2 1 1 2 2 2 2 2 1 2\n 2 2 2 0 1 0 1 2 1 1 2 2 2 2 0 2 1 1 1 0 2 0 0 1 1 2 2 2 2 2 1 2 1 1 0 1 1\n 2 2]",
      "probabilities": "[[9.99999999e-001 2.16847688e-017 1.27372496e-009]\n [2.16921452e-148 1.00000000e+000 1.61047141e-305]\n [1.00000000e+000 1.38062574e-037 4.65611766e-063]\n ...\n [0.00000000e+000 1.00000000e+000 0.00000000e+000]\n [3.24745653e-011 2.48296429e-036 1.00000000e+000]\n [2.58533115e-006 4.95494370e-033 9.99997415e-001]]"
    },
    "DecisionTree": {
      "model": "DecisionTreeClassifier(class_weight='balanced', max_depth=12,\n                       min_samples_leaf=2, min_samples_split=5,\n                       random_state=42)",
      "accuracy": 0.8014705882352942,
      "precision": 0.8025133073970189,
      "recall": 0.801470588235294,
      "f1": 0.8019589087540623,
      "cv_mean": 0.7879401608990821,
      "cv_std": 0.01626379403657609,
      "predictions": "[0 1 0 2 0 0 0 2 1 1 1 1 0 2 0 2 1 1 1 1 1 2 0 2 2 2 0 0 1 0 2 1 2 0 0 2 1\n 1 2 0 2 2 1 1 1 0 0 2 0 1 1 0 0 2 1 1 2 1 2 1 1 2 0 0 2 0 1 0 1 1 1 1 1 2\n 2 2 2 0 1 2 0 1 0 2 0 0 0 2 1 2 0 0 0 2 2 2 0 0 2 2 2 0 2 0 2 2 0 2 2 2 0\n 0 0 1 1 0 1 2 2 2 0 2 1 1 1 0 2 2 2 2 1 1 1 0 1 1 1 1 2 1 1 1 0 2 1 0 1 1\n 0 2 2 0 0 0 0 1 0 1 0 2 2 1 1 1 1 2 2 1 0 0 0 1 1 0 0 1 0 1 1 1 1 1 0 1 1\n 0 2 1 2 2 2 2 1 2 2 2 0 0 0 1 0 0 2 1 1 0 1 0 0 2 0 0 0 1 1 1 2 1 0 0 1 0\n 1 0 2 2 2 2 2 1 2 2 2 0 2 0 1 1 1 0 1 2 0 2 2 0 0 1 0 2 0 2 1 0 2 2 0 2 2\n 2 2 0 2 0 1 2 2 2 1 0 1 1 2 0 2 1 0 0 0 0 0 2 1 0 0 0 0 1 2 0 2 0 0 0 2 2\n 0 1 2 2 1 2 2 0 1 1 1 0 2 2 2 0 2 0 1 1 0 1 1 1 2 1 2 0 1 1 1 0 0 2 1 1 0\n 1 2 0 1 1 2 0 0 1 0 1 2 1 2 0 1 2 1 0 2 1 2 1 2 2 2 2 0 1 0 0 1 2 2 2 0 2\n 0 1 1 0 1 1 0 1 1 2 1 2 0 2 1 0 0 1 2 2 2 1 1 0 0 0 0 0 1 2 1 1 2 0 1 1 2\n 2 2 2 2 2 1 0 0 0 2 0 0 0 2 1 0 2 0 2 2 1 2 2 2 2 2 0 0 0 2 0 1 2 1 2 0 2\n 2 2 0 1 1 1 1 1 0 2 2 0 1 2 0 1 0 1 1 1 0 1 2 0 0 1 2 2 2 0 0 2 1 0 2 0 1\n 0 1 1 0 1 0 2 1 2 1 0 1 1 2 2 1 0 1 2 2 0 0 1 0 2 1 2 1 1 2 2 1 2 2 0 1 2\n 0 2 2 0 1 0 0 0 0 2 2 1 2 2 0 0 2 0 2 2 1 2 2 1 1 2 2 1 2 0 2 1 2 0 0 0 2\n 1 0 0 0 0 0 1 0 1 0 2 1 2 2 2 0 2 2 0 1 0 2 0 0 1 2 0 0 0 2 0 1 0 0 2 0 2\n 0 2 1 1 2 0 0 2 1 2 0 2 2 0 1 0 2 1 0 1 1 2 0 2 0 2 2 0 1 2 2 0 1 1 0 2 2\n 0 1 2 2 1 1 1 2 2 2 0 0 2 1 2 2 2 1 1 1 2 1 0 2 0 2 1 2 2 0 0 2 1 1 0 2 0\n 0 1 0 0 1 2 1 0 1 0 2 2 1 0 1 1 1 0 1 0 1 1 1 2 1 2 0 2 1 0 1 0 2 2 2 1 1\n 1 2 2 0 1 0 2 1 2 1 0 1 2 1 1 2 1 2 2 1 2 0 2 2 1 0 1 2 2 2 1 1 2 2 0 0 1\n 1 1 2 1 2 2 1 2 1 0 1 1 0 2 0 1 2 1 1 1 0 2 2 0 2 2 1 0 1 1 0 2 0 0 2 1 0\n 0 0 0 0 1 0 1 2 1 1 0 0 2 0 0 0 1 1 1 0 0 0 0 1 1 2 0 0 0 0 1 2 1 1 0 1 1\n 0 2]",
      "probabilities": "[[1.         0.         0.        ]\n [0.         1.         0.        ]\n [1.         0.         0.        ]\n ...\n [0.         1.         0.        ]\n [0.83636364 0.         0.16363636]\n [0.10526316 0.05263158 0.84210526]]"
    }
  }
}